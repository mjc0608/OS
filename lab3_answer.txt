1. What is the purpose of having an individual handler function
for each exception/interrupt? (i.e., if all exceptions/interrupts
were delivered to the same handler, what feature that exists in
the current implementation could not be provided?)
- Some interrupt/exception have error code, but others don't, if
  we use the same handler, there might be some problems.
- For some interrupt or exceptions, we can fix the problem and
  continue executing the program. For example, when a page fault
  happens, if the address is just below the stack, we can intend
  the stack and continue execution.

2. Did you have to do anything to make the user/softint program
behave correctly? The grade script expects it to produce a general
protection fault (trap 13), but softint's code says int $14. Why
should this produce interrupt vector 13? What happens if the
kernel actually allows softint's int $14 instruction to invoke
the kernel's page fault handler (which is interrupt vector 14)?
- The page fault handler is configured that it can only be generated
  by ring 0 or the hardware, so when a ring 3 program want to
  generate the interrupt itself, an general protection exception will
  occur.

3. The break point test case will either generate a break point
exception or a general protection fault depending on how you
initialized the break point entry in the IDT (i.e., your call to
SETGATE from trap_init). Why? How do you need to set it up in order
to get the breakpoint exception to work as specified above and what
incorrect setup would cause it to trigger a general protection fault?
- If we initialize the break point as ring 0, a general protection
  fault will occur, we should set the exception user genratable.

4. What do you think is the point of these mechanisms, particularly
in light of what the user/softint test program does?
- If ring 3 programs can generate all page exceptions, soft int may
  be abused to slow down or even attack the operating system. For
  example, when ring 3 int a page fault exception, but it does not
  provide a address in cr2, which will confuse the kernel.
