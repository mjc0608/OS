Part A: User Environments and Exception Handling
Evnironment state:
    In mem_init() in kern/pmap.c, allocate a array of environments,
    and push them into a list. And map the array to UENVS.
    env_setup_vm() allocates a page table for the env, and copies the
    page table of kernel to it. Then the elf binary is loaded to the
    env. env_run() loads the trapframe of a given env into HW and switch
    cr3 to start executing the env.
Handling Interrupts and Exception:
    In kern/trapentry.S, add the entries of trap handlers, and let all
    handlers call _alltraps first. In _alltraps, trapframe is completed
    and it will call trap() in kern/trap.c. The entry of sysenter, which
    is used to support system call is also defined here.
    In kern/trap.c, trap_init() is responsable for initilize interrupts
    and traps, which will fill idt and setup registers for system call
    support. trap_dispatch() is responsable for dispatch the trap to its
    handler.

Part B: Page Faults, Breakpoints Exceptions, and System Call
Handling Page Faults:
    Currently page fault will be given to page_fault_handler(),
    and debug and breakpoint will be handled by monitor().
    In kern/monitor.c, 3 additional commands, x, si and c are added to
    support debug feature.
    In lib/syscall.c, syscall() is finished. Before sysenter instruction,
    the registers are saved and arguments are placed into the registers.
    In kern/syscall.c, syscall() is used to dispatch the system calls.
User-mode startup:
    Add struct Env, heap_top is added to remember current program's break.
    When call the sys_brk(), the system call handler will allocate new pages,
    and setup the mapping.
evilhello2:
    In this function, we use sgdt instruction to store gdtr in an guest
    address, and then map the page include gdt in a specific region. Then
    we find gdt and set a call gate on the task segment selector of CPU0
    which will call ring0_call_fun_ret() when a far call to that region.
    Then we generate a lcall to enter that function. This function will call
    evil and then use a lret to return to user mode.
